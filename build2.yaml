# Author: Nuno Aguiar
help:
  text   : OpenAF build job
  expects: 
  - name     : dist
    mandatory: false
  - name     : json
    desc     : To do stuff
    example  : aValueExample
    mandatory: false

init:
  javaSrc: src
  javaBin: bin

todo:
- Load build data
- Java classes
#- JS code
#- oDoc
#- CSS files
#- Fonts files
#- HBS files
#- Licenses info
#- Dependencies info
#- Manifest info
#- OpenAF JAR
#- Repack OpenAF

ojob:
  opacks      :
  - openaf     : 20211229
  - oJob-common: 20220409
  catch       : logErr(exception)
  logToConsole: true   # to change when finished
  async       : false

include:
- ojob.yaml

jobs:
# **********************
- name : Load build data
  check:
    in: 
      path: isString.default(".")
      dist: isString.default("nightly")
      json: isString.default("openaf.json")
  exec : | 
    global.path = args.path
    global.dist = args.dist
    global.json = args.json
    $ch("files").create(1, "file", {
      file: global.path + "/buildData.json"
    })

    global.checkHash = path => {
      var res = []
      return listFilesRecursive(path).filter(f => f.isFile).map(f => {
        var changed = true
        var v = $ch("files").get({ file: f.filepath })
        if (isMap(v)) {
          var is = io.readFileStream(f.filepath)
          if (sha1(is) == v.hash) changed = false
          is.close()
        }
      
        return {
          filepath: f.filepath,
          changed : changed
        }
      })
    }

    global.setHash = path => {
      listFilesRecursive(path).filter(f => f.isFile).map(f => {
        var is = io.readFileStream(f.filepath)
        $ch("files").set({ file: f.filepath }, { file: f.filepath, hash: sha1(is) })
        is.close()
      })
    }

# ******************
- name: Java classes
  deps: 
  - Load build data
  to  : ojob job
  args:
    _checks : Check Java classes
    _actions: 
      compile: Compile Java classes

# ------------------------
- name: Check Java classes
  exec: |
    var res = global.checkHash(global.path + "/" + args.init.javaSrc)

    // If any file changed compile everything
    if ($from(res).equals("changed", true).any()) args._action = "compile"
    log("Number of java classes source changed: #" + $from(res).equals("changed", true).count())

    // If corresponding class is not found compile everything
    var missing = 0
    res.forEach(r => {
      if (!io.fileExists(r.filepath.replace(global.path + "/" + args.init.javaSrc, global.path + "/" + args.init.javaBin).replace(".java", ".class"))) {
        args._action = "compile"
        missing++
      }
    })
    log("Number of java classes binary missing: #" + missing)

# --------------------------
- name: Compile Java classes
  exec: |
    global.setHash(global.path + "/" + args.init.javaSrc)

# ---------------------
- name: JS code
  deps: Load build data
  to  : ojob job
  args:
    _checks : Check JS code
    _actions: 
      compile: Compile JS code

- name: Check JS code
- name: Compile JS code
# ----------
- name: oDoc
  deps: Load build data
  to  : ojob job
  args:
    _checks : Check oDoc
    _actions: 
      generate: Generate oDoc

- name: Check oDoc
- name: Generate oDoc
  deps:
  - Java classes
  - JS code
# ---------------
- name: CSS files
  deps: Load build data
  to  : ojob job
  args:
    _checks : Check css files
    _actions: 
      add: Adding css files

- name: Check css files
- name: Adding css files
# -----------------
- name: Fonts files
  deps: Load build data
  to  : ojob job
  args:
    _checks : Check fonts files
    _actions: 
      add: Adding fonts files

- name: Check fonts files
- name: Adding fonts files
# ---------------
- name: HBS files
  deps: Load build data
  to  : ojob job
  args:
    _checks : Check hbs files
    _actions: 
      add: Adding hbs files

- name: Check hbs files
- name: Adding hbs files
# -------------------
- name: Licenses info
  deps: Load build data
  to  : ojob job
  args:
    _checks : Check licenses info
    _actions: 
      build: Build licenses info

- name: Check licenses info
- name: Build licenses info
# -----------------------
- name: Dependencies info
  deps: Load build data
  to  : ojob job
  args:
    _checks : Check dependencies info
    _actions: 
      build: Build dependencies info

- name: Check dependencies info
- name: Build dependencies info
# -------------------
- name: Manifest info
  deps: Load build data
  to  : ojob job
  args:
    _checks : Check manifest
    _actions: 
      build: Build manifest

- name: Check manifest
- name: Build manifest
# ----------------
- name: OpenAF JAR
  deps:
  - Load build data
  - Java classes
  - JS code
  - oDoc
  - CSS files
  - Fonts files
  - HBS files
  - Build licenses info
  - Build dependencies info
  - Build manifest
  to  : ojob job
  args:
    _checks : Check OpenAF JAR
    _actions: 
      compile: Create OpenAF JAR

- name: Check OpenAF JAR
- name: Create OpenAF JAR
# -------------------
- name: Repack OpenAF
  deps:
  - Load build data 
  - OpenAF JAR
  #to  : ojob job
  args:
    _checks : Check repack build OpenAF
    _actions: 
      compile: Repack build OpenAF

- name: Check repack build OpenAF
- name: Repack built OpenAF